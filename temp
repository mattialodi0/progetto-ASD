
	boolean f = false;
	while (f == false) {

		for (c : FC) {
		f=SelectCloseCell(MNKCell c, MNKCell FC[])
		}

	}




	private MNKCell SelectCloseCell(MNKCell c, MNKCell FC[]) {
		int m; int n;
		//cerca una cella valida		
		if(c.i < M-1 && c.j < N-1) {
			m = c.i+1; n = c.j+1;
			//controlla che non sia marcata
			MNKCell f = new MNKCell(m, n);
			for(int k=0; k < MC.length; k++) {
				if(m == MC[k].i && n == MC[k].j) {
        			return true;
				}
			}
		}
		if(c.i > 0 && c.j > 0) {
			m = c.i-1; n = c.j-1;
			//controlla che non sia marcata
			MNKCell f = new MNKCell(m, n);
			for(int k=0; k < MC.length; k++) {
				if(m == MC[k].i && n == MC[k].j) {
        			return true;
				}
			}
		}
		if(c.i < M-1 && c.j > 0) {
			m = c.i+1; n = c.j-1;
			//controlla che non sia marcata
			MNKCell f = new MNKCell(m, n);
			for(int k=0; k < MC.length; k++) {
				if(m == MC[k].i && n == MC[k].j) {
        			return true;
				}
			}
		}
		if(c.i > 0 && c.j < N-1) {
			m = c.i-1; n = c.j+1;
			//controlla che non sia marcata
			MNKCell f = new MNKCell(m, n);
			for(int k=0; k < MC.length; k++) {
				if(m == MC[k].i && n == MC[k].j) {
        			return true;
				}
			}
		}


		if(c.i < M-1) {
			m = c.i+1; n = c.j;
			//controlla che non sia marcata
			MNKCell f = new MNKCell(m, n);
			for(int k=0; k < MC.length; k++) {
				if(m == MC[k].i && n == MC[k].j) {
        			return true;
				}
			}
		}
		if(c.i > 0) {
			m = c.i-1; n = c.j;
			//controlla che non sia marcata
			MNKCell f = new MNKCell(m, n);
			for(int k=0; k < MC.length; k++) {
				if(m == MC[k].i && n == MC[k].j) {
        			return true;
				}
			}
		}
		if(c.j > 0) {
			m = c.i; n = c.j-1;
			//controlla che non sia marcata
			MNKCell f = new MNKCell(m, n);
			for(int k=0; k < MC.length; k++) {
				if(m == MC[k].i && n == MC[k].j) {
        			return true;
				}
			}
		}
		if(c.j < N-1) {
			m = c.i; n = c.j+1;
			//controlla che non sia marcata
			MNKCell f = new MNKCell(m, n);
			for(int k=0; k < MC.length; k++) {
				if(m == MC[k].i && n == MC[k].j) {
        			return true;
				}
			}
		}

		return false;	
	}


}
